@model List<FCake.Domain.WebModels.KitchenInfo>
@{
    ViewBag.Title = "厨房制作";
}

<div class="wrap">
    @if (Model.Any() == false)
    {
        <span>查无批次号为" @(ViewBag.batchNo) "的厨房数据，请确认该批次号是否存在或是否已被删除。</span>
    }
    else
    {

            <!--head-->
        <table class="fullwidth head">
            <tr>
                <td colspan="3" style="text-align:center;font-size:1.5em;">厨房制作</td>
            </tr>
            <tr>
                <td width="120" style="text-align:right">批次号：</td>
                <td>@ViewBag.batchNo</td>
                <td width="350">
                    @*<a class="btn btn-default" href="/AreaPad/Kitchen?batchno=@ViewBag.nextBatchNo&showtype=@ViewBag.showType">下一批次</a>
                    <a class="btn btn-default" href="/AreaPad/Kitchen?batchno=@ViewBag.preBatchNo&showtype=@ViewBag.showType">上一批次</a>*@
                    <a class="btn btn-default" href='@(ViewBag.nextBatchNo != ""?"/AreaPad/Kitchen?batchno="+ViewBag.nextBatchNo+"&showtype="+ViewBag.showType:"")' @(ViewBag.nextBatchNo == "" ? "disabled" : "")>下一批次</a>
                    <a class="btn btn-default" href='@(ViewBag.preBatchNo != "" ? "/AreaPad/Kitchen?batchno=" + ViewBag.preBatchNo + "&showtype=" + ViewBag.showType : "")' @(ViewBag.preBatchNo == "" ? "disabled" : "")>上一批次</a>
                    <span id="_@ViewBag.batchNo">
                        @if (Model.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.NotStart))
                        {
                            <a class="btn btn-info" href="javascript:;" onclick="BeginBatch('@ViewBag.batchNo',this); return false;">开始</a>
                        }
                        @if (Model.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making))
                        {
                            <a class="btn btn-danger" href="javascript:;" onclick="RescindBatch('@ViewBag.batchNo',this); return false;">撤销</a>
                            <a class="btn btn-success" href="javascript:;" onclick="EndBatch('@ViewBag.batchNo',this); return false;">完成</a>
                        }
                    </span>
                </td>
            </tr>
            <tr>
                <td style="text-align:right">要求完成时间：</td>
                <td>@(Model.First().BatchRequiredTime)</td>
                <td>
                    <a class="btn btn-default" href="?batchno=@ViewBag.batchNo&showtype=0" @(ViewBag.showType == 0?"disabled":"")>排产显示</a>
                    <a class="btn btn-default" href="?batchno=@ViewBag.batchNo&showtype=1" @(ViewBag.showType == 0 ? "" : "disabled")>订单显示</a>
                    <a class="btn btn-default" href="javascript:;" onclick="window.location.reload(); return false;">刷新</a>
                </td>
            </tr>
        </table>
            <!--end head-->
        if (ViewBag.showType == 0)
        {
            <!--body-->
            <table class="fullwidth line">
                <thead>
                    <tr>
                        <td width="130">订单号</td>
                        <td>产品名称</td>
                        <td width="50">规格</td>
                        <td width="50">数量</td>
                        <td width="250">操作</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var group in Model.GroupBy(a => a.ProductId).OrderBy(a => a.Min(b => b.OrderRequiredTime)))
                    {
                    <tr class="active">
                        <td colspan="4" class="parent">
                            蛋糕名称：@group.First().ProductName &nbsp;数量：@group.Sum(a => a.Num) &nbsp;最早要求送达时间：@group.Min(a => a.OrderRequiredTime)
                        </td>
                        <td id="_@group.Key">
                            @if (group.Any(a => a.ProductStatus != FCake.Domain.Enums.OrderBatchMakeStatus.Complete) == false)
                                {
                            @:(@FCake.Core.Common.EnumHelper.GetDescription(FCake.Domain.Enums.OrderBatchMakeStatus.Complete))
                                }
                            @if (group.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making))
                                {
                            @:(@FCake.Core.Common.EnumHelper.GetDescription(FCake.Domain.Enums.OrderBatchMakeStatus.Making))
                                }
                            @if (group.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making) == false
                                    && group.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.NotStart)
                                    && group.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Complete))
                                {
                            @:(@FCake.Core.Common.EnumHelper.GetDescription(FCake.Domain.Enums.OrderBatchMakeStatus.Making))
                                }
                            @if (group.Any(a => a.ProductStatus != FCake.Domain.Enums.OrderBatchMakeStatus.NotStart) == false)
                                {
                            @:(@FCake.Core.Common.EnumHelper.GetDescription(FCake.Domain.Enums.OrderBatchMakeStatus.NotStart))
                                }

                            @if (group.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.NotStart))
{
                            <a class="btn btn-info" href="javascript:;" onclick="BeginProductMakeByProductId('@group.Key','@HttpContext.Current.Server.UrlEncode(group.First().ProductName)',@group.Where(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.NotStart).Sum(a => a.Num),'@ViewBag.batchNo',this); return false;">开始</a>
}
                            @if (group.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making))
                                {
                            <a class="btn btn-danger" href="javascript:;" onclick="RescindProductMakeByProductId('@group.Key','@HttpContext.Current.Server.UrlEncode(group.First().ProductName)',@group.Where(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making).Sum(a => a.Num),'@ViewBag.batchNo',this); return false;">撤销</a>
                            <a class="btn btn-success" href="javascript:;" onclick="EndProductMakeByProductId('@group.Key','@HttpContext.Current.Server.UrlEncode(group.First().ProductName)',@group.Where(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making).Sum(a => a.Num),'@ViewBag.batchNo',this); return false;">完成</a>
                                }

                        </td>
                    </tr>
                        foreach (var item in group)
                        {
                    <tr class="_@group.Key">
                        <td>@item.OrderNo</td>
                        <td>@item.ProductName</td>
                        <td>@item.SizeTitle</td>
                        <td>@item.Num</td>
                        <td id="_@item.KitchenMakeDetailId">
                            (@FCake.Core.Common.EnumHelper.GetDescription(item.ProductStatus))
                            @if (item.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.NotStart)
                                    {
                            <a class="btn btn-info" href="javascript:;" onclick="BeginProductMake('@item.KitchenMakeDetailId','@HttpContext.Current.Server.UrlEncode(item.ProductName)',this);return false;">开始</a>
                                    }
                            else if (item.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making)
                                    {
                            <a class="btn btn-danger" href="javascript:;" onclick="RescindProductMake('@item.KitchenMakeDetailId', '@HttpContext.Current.Server.UrlEncode(item.ProductName)', this); return false;">撤销</a>
                            <a class="btn btn-success" href="javascript:;" onclick="EndProductMake('@item.KitchenMakeDetailId', '@HttpContext.Current.Server.UrlEncode(item.ProductName)', this); return false;">完成</a>
                                    }
                        </td>
                    </tr>
                        }
                    }
                </tbody>
            </table>
            <!--end body-->
        }
        else
        {
            <!--body-->
            <table class="fullwidth line">
                <thead>
                    <tr>
                        <td>蛋糕名称</td>
                        <td width="50">规格</td>
                        <td width="50">数量</td>
                        <td width="250">操作</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var group in Model.GroupBy(a => a.OrderNo).OrderBy(a => a.Max(b => b.OrderRequiredTime)))
                    {
                        <tr class="active">
                            <td colspan="3" class="parent">
                                订单编号：@group.Key &nbsp;&nbsp;数量：@group.Sum(a => a.Num) &nbsp;&nbsp;要求送达时间：@group.Min(a => a.OrderRequiredTime)
                            </td>
                            <td id="_@group.Key">
                                @if (group.Any(a => a.ProductStatus != FCake.Domain.Enums.OrderBatchMakeStatus.Complete) == false)
                                {
                                    @:(@FCake.Core.Common.EnumHelper.GetDescription(FCake.Domain.Enums.OrderBatchMakeStatus.Complete))
                                }
                                @if (group.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making))
                                {
                                    @:(@FCake.Core.Common.EnumHelper.GetDescription(FCake.Domain.Enums.OrderBatchMakeStatus.Making))
                                }
                                @if (group.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making) == false
                                    && group.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.NotStart)
                                    && group.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Complete))
                                {
                                    @:(@FCake.Core.Common.EnumHelper.GetDescription(FCake.Domain.Enums.OrderBatchMakeStatus.Making))
                                }
                                @if (group.Any(a => a.ProductStatus != FCake.Domain.Enums.OrderBatchMakeStatus.NotStart) == false)
                                {
                                    @:(@FCake.Core.Common.EnumHelper.GetDescription(FCake.Domain.Enums.OrderBatchMakeStatus.NotStart))
                                }


                                @if (group.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.NotStart))
                                {
                                    <a class="btn btn-info" href="javascript:;" onclick="BeginProductMakeByOrderNo('@group.Key',@group.Where(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.NotStart).Sum(a => a.Num),'@ViewBag.batchNo',this); return false;">开始</a>
                                }
                                @if (group.Any(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making))
                                {
                                    <a class="btn btn-danger" href="javascript:;" onclick="RescindProductMakeByOrderNo('@group.Key',@group.Where(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making).Sum(a => a.Num),'@ViewBag.batchNo',this); return false;">撤销</a>
                                    <a class="btn btn-success" href="javascript:;" onclick="EndProductMakeByOrderNo('@group.Key',@group.Where(a => a.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making).Sum(a => a.Num),'@ViewBag.batchNo',this); return false;">完成</a>
                                }
                            </td>
                        </tr>
                        foreach (var item in group)
                        {
                            <tr class="_@group.Key">
                                <td>@item.ProductName</td>
                                <td>@item.SizeTitle</td>
                                <td>@item.Num</td>
                                <td id="_@item.KitchenMakeDetailId">
                                    (@FCake.Core.Common.EnumHelper.GetDescription(item.ProductStatus))
                                    @if (item.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.NotStart)
                                    {
                                        <a class="btn btn-info" href="javascript:;" onclick="BeginProductMake('@item.KitchenMakeDetailId','@HttpContext.Current.Server.UrlEncode(item.ProductName)',this);return false;">开始</a>
                                    }
                                    else if (item.ProductStatus == FCake.Domain.Enums.OrderBatchMakeStatus.Making)
                                    {
                                        <a class="btn btn-danger" href="javascript:;" onclick="RescindProductMake('@item.KitchenMakeDetailId', '@HttpContext.Current.Server.UrlEncode(item.ProductName)', this); return false;">撤销</a>
                                        <a class="btn btn-success" href="javascript:;" onclick="EndProductMake('@item.KitchenMakeDetailId', '@HttpContext.Current.Server.UrlEncode(item.ProductName)', this); return false;">完成</a>
                                    }
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <!--end body-->
        }
    }
</div>

<script type="text/javascript">
    function BeginProductMake(id, name, e) {
        $p = $(e).parent();
        if (confirm("确定开始制作吗\n\n蛋糕名称：" + decodeURIComponent(name))) {
            $p.data("html", $p.html());
            $p.html("处理中");
            $.ajax({
                url: '/areapad/kitchen/beginProductMake/' + id,
                type: 'post',
                dataType: 'json',
                success: function (data, status) {
                    if (data.validate) {
                        ResetStatus();
                        //window.location.reload();
                    }
                    else {
                        $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    }
                },
                error: function () {
                    $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                }
            });
        }
    }
    function RescindProductMake(id, name, e) {
        $p = $(e).parent();
        if (confirm("确定取消制作吗\n\n蛋糕名称：" + decodeURIComponent(name))) {
            $p.data("html", $p.html());
            $p.html("处理中");
            $.ajax({
                url: '/areapad/kitchen/RescindProductMake/' + id,
                type: 'post',
                dataType: 'json',
                success: function (data, status) {
                    if (data.validate) {
                        ResetStatus();
                    }
                    else {
                        $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    }
                },
                error: function () {
                    $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                }
            });
        }
    }
    function EndProductMake(id, name, e) {
        $p = $(e).parent();
        if (confirm("确定完成制作吗\n\n蛋糕名称：" + decodeURIComponent(name))) {
            $p.data("html", $p.html());
            $p.html("处理中");
            $.ajax({
                url: '/areapad/kitchen/EndProductMake/' + id,
                type: 'post',
                dataType: 'json',
                success: function (data, status) {
                    if (data.validate) {
                        ResetStatus();
                    }
                    else {
                        $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    }
                },
                error: function () {
                    $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    //$p.html($p.data("html"));
                }
            });
        }
    }
    function BeginProductMakeByProductId(id, name, num, batchno, e) {
        $p = $(e).parent();
        if (confirm("确定开始制作吗\n\n蛋糕名称：" + decodeURIComponent(name) + "\n数量：" + num)) {
            $p.data("html", $p.html());
            $p.html("处理中");
            $.ajax({
                url: '/areapad/kitchen/BeginProductMakeByProductId/' + id + "?batchno=" + batchno,
                type: 'post',
                dataType: 'json',
                success: function (data, status) {
                    if (data.validate) {
                        ResetStatus();
                    }
                    else {
                        $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    }
                },
                error: function () {
                    $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                }
            });
        }
    }
    function RescindProductMakeByProductId(id, name, num, batchno, e) {
        $p = $(e).parent();
        if (confirm("确定取消制作吗\n\n蛋糕名称：" + decodeURIComponent(name) + "\n数量：" + num)) {
            $p.data("html", $p.html());
            $p.html("处理中");
            $.ajax({
                url: '/areapad/kitchen/RescindProductMakeByProductId/' + id + "?batchno=" + batchno,
                type: 'post',
                dataType: 'json',
                success: function (data, status) {
                    if (data.validate) {
                        ResetStatus();
                    }
                    else {
                        $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    }
                },
                error: function () {
                    $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                }
            });
        }
    }
    function EndProductMakeByProductId(id, name, num, batchno, e) {
        $p = $(e).parent();
        if (confirm("确定完成制作吗\n\n蛋糕名称：" + decodeURIComponent(name) + "\n数量：" + num)) {
            $p.data("html", $p.html());
            $p.html("处理中");
            $.ajax({
                url: '/areapad/kitchen/EndProductMakeByProductId/' + id + "?batchno=" + batchno,
                type: 'post',
                dataType: 'json',
                success: function (data, status) {
                    if (data.validate) {
                        ResetStatus();
                    }
                    else {
                        $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    }
                },
                error: function () {
                    $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                }
            });
        }
    }
    function BeginProductMakeByOrderNo(id, num, batchno, e) {
        $p = $(e).parent();
        if (confirm("确定开始制作吗\n\n订单编号：" + id + "\n数量：" + num)) {
            $p.data("html", $p.html());
            $p.html("处理中");
            $.ajax({
                url: '/areapad/kitchen/BeginProductMakeByOrderNo/' + id,
                type: 'post',
                dataType: 'json',
                success: function (data, status) {
                    if (data.validate) {
                        ResetStatus();
                    }
                    else {
                        $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    }
                },
                error: function () {
                    $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                }
            });
        }
    }
    function RescindProductMakeByOrderNo(id, num, batchno, e) {
        $p = $(e).parent();
        if (confirm("确定取消制作吗\n\n订单编号：" + id + "\n数量：" + num)) {
            $p.data("html", $p.html());
            $p.html("处理中");
            $.ajax({
                url: '/areapad/kitchen/RescindProductMakeByOrderNo/' + id,
                type: 'post',
                dataType: 'json',
                success: function (data, status) {
                    if (data.validate) {
                        ResetStatus();
                    }
                    else {
                        $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    }
                },
                error: function () {
                    $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                }
            });
        }
    }
    function EndProductMakeByOrderNo(id, num, batchno, e) {
        $p = $(e).parent();
        if (confirm("确定完成制作吗\n\n订单编号：" + id + "\n数量：" + num)) {
            $p.data("html", $p.html());
            $p.html("处理中");
            $.ajax({
                url: '/areapad/kitchen/EndProductMakeByOrderNo/' + id,
                type: 'post',
                dataType: 'json',
                success: function (data, status) {
                    if (data.validate) {
                        ResetStatus();
                    }
                    else {
                        $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    }
                },
                error: function () {
                    $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                }
            });
        }
    }
    function BeginBatch(batchno, e) {
        $p = $(e).parent();
        if (confirm("确定全部开始制作吗")) {
            $p.data("html", $p.html());
            $p.html("处理中");
            $.ajax({
                url: '/areapad/kitchen/BeginBatch/' + batchno,
                type: 'post',
                dataType: 'json',
                success: function (data, status) {
                    if (data.validate) {
                        ResetStatus();
                    }
                    else {
                        $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    }
                },
                error: function () {
                    $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                }
            });
        }
    }
    function RescindBatch(batchno, e) {
        $p = $(e).parent();
        if (confirm("确定全部取消制作吗")) {
            $p.data("html", $p.html());
            $p.html("处理中");
            $.ajax({
                url: '/areapad/kitchen/RescindBatch/' + batchno,
                type: 'post',
                dataType: 'json',
                success: function (data, status) {
                    if (data.validate) {
                        ResetStatus();
                    }
                    else {
                        $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    }
                },
                error: function () {
                    $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                }
            });
        }
    }
    function EndBatch(batchno, e) {
        $p = $(e).parent();
        if (confirm("确定全部完成制作吗")) {
            $p.data("html", $p.html());
            $p.html("处理中");
            $.ajax({
                url: '/areapad/kitchen/EndBatch/' + batchno,
                type: 'post',
                dataType: 'json',
                success: function (data, status) {
                    if (data.validate) {
                        ResetStatus();
                    }
                    else {
                        $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                    }
                },
                error: function () {
                    $.messager.alert("操作提示", "处理失败，请刷新后重试", "error", function () { $p.html($p.data("html")); });
                }
            });
        }
    }

    function ResetStatus() {
        $.ajax({
            url: '/areapad/kitchen/GetStatus/@ViewBag.batchNo',
            dataType: 'json',
            type: 'post',
            success: function (data, status) {
                if (data.validate) {
                    $.each(data.html, function (index, value) {
                        if ($('#_' + value.id).length > 0) {
                            $('#_' + value.id).html(value.html);
                        }
                    });
                }
                else {
                    window.location.reload();
                }
            },
            error: function () {
                window.location.reload();
            }
        });
    }

    $(function () {
        $('.parent').click(function () {
            $('.' + $(this).next().attr("id")).toggle();
        });
    })
</script>

<style>
    .wrap {
        position: relative;
        max-width: 860px;
        padding: 10px;
        /*left: 50%;
        margin-left: -450px;*/
        /*background-color:#eeeef2;*/
    }

    .fullwidth {
        width: 100%;
        margin-bottom: 20px;
    }

        .fullwidth thead {
            background-color: #dddddd;
        }

        .fullwidth .active {
            background-color: #e9e9e9;
        }

        .fullwidth td {
            padding: 10px 0;
        }

    .line td {
        padding: 10px;
    }

    .line, .line td {
        border: solid 1px gray;
    }
</style>